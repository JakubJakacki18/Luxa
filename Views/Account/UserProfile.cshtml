@model Luxa.ViewModel.UserProfileVM
@{
    ViewData["Title"] = "Profil użytkownika";
}

<style>
    body {
        /* background-color: #4A4A4A; */
    }
    #profile-wrapper {
        display: flex;
        flex-flow: row nowrap;
        justify-content: space-between;
        border: 1px black;
        border-radius: 20%;
    }

    #avatar {
        flex-grow: 1;
    }

    #name-desc {
        flex-grow: 48;
        color: #FAF0E6;
    }

    #edit-button {
        width: 87px;
        height: 32px;
        flex-grow: 1;
    }

    #edit-button a {
            color: #FAF0E6;
        text-decoration: none;
        /* background-color: #FF715B; */
        padding: 5px 5px;
        border-radius: 5pt;
    }
</style>

<div id="profile-wrapper">
    <div id="avatar">
        <label for="avatar-input" style="cursor: pointer;">
            <img src="@Model.AvatarUrl" alt="Avatar" class="avatar" />
        </label>
        <form asp-action="UploadAvatar" asp-controller="Account" enctype="multipart/form-data" method="post">
            <input type="file" name="avatar" id="avatar-input" style="display: none;" />
            <button type="submit" id="upload-button" style="display: none;">Upload Avatar</button>
        </form>
    </div>
    <div id="background">
        <label for="background-input" style="cursor: pointer;">
            <img src="@Model.BackgroundUrl" alt="Background" class="background" />
        </label>
        <form asp-action="UploadBackground" asp-controller="Account" enctype="multipart/form-data" method="post">
            <input type="file" name="background" id="background-input" style="display: none;" />
            <button type="submit" id="upload-background-button" style="display: none;">Upload Background</button>
        </form>
    </div>
    <div id="name-desc">
        <h2>@Model.UserName</h2>
    </div>
    <div id="edit-button">
        <a class="btn btn-primary" asp-action="ChangeData" asp-controller="Settings">Edit Profile</a>
    </div>
</div>
</hr>
<div id="photo-gallery">
    @await Component.InvokeAsync("ProfilePhoto", new { pageNumber = 1, pageSize = 10, userName = Model.UserName })
</div>


@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const avatarInput = document.getElementById('avatar-input');
            const uploadButton = document.getElementById('upload-button');

            avatarInput.addEventListener('change', function () {
                uploadButton.click();
            });

            document.addEventListener('DOMContentLoaded', function () {
                const backgroundInput = document.getElementById('background-input');
                const uploadBackgroundButton = document.getElementById('upload-background-button');

                backgroundInput.addEventListener('change', function () {
                    uploadBackgroundButton.click();
                });
            });

            let pageNumber = 2;
            const pageSize = 10;
            const gallery = document.getElementById('photo-gallery');
            const userName = '@Model.UserName';

            function loadMorePhotos() {
                fetch(`/Photo/LoadMorePhotos?pageNumber=${pageNumber}&pageSize=${pageSize}&userName=${userName}`)
                    .then(response => response.text())
                    .then(html => {
                        gallery.insertAdjacentHTML('beforeend', html);
                        pageNumber++;
                    });
            }
        });
    </script>
}
