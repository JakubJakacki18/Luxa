@model Luxa.ViewModel.UserProfileVM
@{
    ViewData["Title"] = "Profil użytkownika";
}

<style>
    :root {
        --darker-violet: #2b2735;
        --dark-violet: #373341;
        --light-violet: #4C3C78;
        --lighter-violet: #614D99;
        --yellowish: #FAF0E6;
    }

    .target {
        position: absolute;
        bottom: 0;
        left: 0;
        width: 100%;
        background-color: rgba(255, 255, 255, 0.5);
        border-bottom-left-radius: 15px;
        border-bottom-right-radius: 15px;
        color: black;
        text-align: center;
        padding: 10px;
        box-sizing: border-box;
        opacity: 0;
        transition: opacity 0.7s ease;
        height: 50px;
        display: flex;
        gap: 10px;
        flex-direction: row;
    }

    #bg-label {
        border-radius: 10px;
        cursor: pointer;
        width: 100%;
    }

    #profile-wrapper {
        display: flex;
        flex-flow: row nowrap;
        justify-content: space-between;
        border: 1px solid black;
        border-radius: 10px;
        width: auto;
    }

    #avatar {
        flex-grow: 1;
        display: flex;
        justify-content: flex-end;
        align-items: flex-end;
    }

    #name-desc {
        flex-grow: 48;
        color: #FAF0E6;
        padding: 5px 10px;
    }

    #name-desc h2 {
        padding: 2px;
        max-width: max-content;
    }

    #name-desc textarea {
        resize: none;
        background-color: transparent;
        color: var(--yellowish);
        width: 100%;
        border: none;
    }

    #edit-button {
        width: 87px;
        height: 32px;
        flex-grow: 1;
        display: flex;
        justify-content: center;
        align-items: flex-start;
        margin-top: 10px;
    }

    #edit-button a {
        color: #FAF0E6;
        text-decoration: none;
        /* background-color: #FF715B; */
        padding: 5px 5px;
        border-radius: 5pt;
    }

    .photoGallery {
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        justify-content: flex-start;
        align-items: center;
        margin-top: 20px;
    }

    .photo {
        position: relative;
        width: 32%;
        max-height: fit-content;
        margin: 0 8px;
    }

    .photoGallery a {
        width: 100%;
    }

    .photoGallery img {
        width: 100%;
        max-height: 415px;
        object-fit: cover;
    }
</style>

@if (Model.IsCurrentUserProfile)
{
    <label id="bg-label" for="background-input">
        <div id="profile-wrapper">
            <div id="avatar">
                <label for="avatar-input" style="cursor: pointer;">
                    <img src="@Model.AvatarUrl" alt="Avatar" class="avatar" />
                </label>
                <form asp-action="UploadAvatar" asp-controller="Account" enctype="multipart/form-data" method="post">
                    <input type="file" name="avatar" id="avatar-input" style="display: none;" />
                    <button type="submit" id="upload-button" style="display: none;">Upload Avatar</button>
                </form>
            </div>
            <div id="name-desc">
                <h2>@Model.UserName</h2>
                <textarea readonly disabled>@Model.Description</textarea>
            </div>
            <div id="edit-button">
                <a class="btn btn-primary" asp-action="ChangeProfile" asp-controller="Settings">Edit Profile</a>
            </div>
        </div>
    </label>
    <form asp-action="UploadBackground" asp-controller="Account" enctype="multipart/form-data" method="post">
        <input type="file" name="background" id="background-input" style="display: none;" />
        <button type="submit" id="upload-background-button" style="display: none;">Upload Background</button>
    </form>
}
else
{
    <div id="profile-wrapper">
        <div id="avatar">
            <img src="@Model.AvatarUrl" alt="Avatar" class="avatar" />
        </div>
        <div id="name-desc">
            <h2>@Model.UserName</h2>
            <textarea readonly disabled>@Model.Description</textarea>
        </div>
    </div>
}

<div id="photo-gallery" class="photoGallery">
    @await Component.InvokeAsync("ProfilePhoto", new { pageNumber = 1, pageSize = 10, userName = Model.UserName })
</div>


@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const avatarInput = document.getElementById('avatar-input');
            const uploadButton = document.getElementById('upload-button');

            avatarInput.addEventListener('change', function () {
                uploadButton.click();
            });
        });

        document.addEventListener('DOMContentLoaded', function () {
            const backgroundInput = document.getElementById('background-input');
            const uploadBackgroundButton = document.getElementById('upload-background-button');

            backgroundInput.addEventListener('change', function () {
                uploadBackgroundButton.click();
            });
        });
            
        let pageNumber = 2;
        const pageSize = 10;
        const gallery = document.getElementById('photo-gallery');
        const userName = '@Model.UserName';

        const bgUrl = '@Model.BackgroundUrl'
        document.getElementById("profile-wrapper").style.backgroundImage = `linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url('${bgUrl}')`;

        function loadMorePhotos() {
            fetch(`/Photo/LoadMorePhotos?pageNumber=${pageNumber}&pageSize=${pageSize}&userName=${userName}`)
            .then(response => response.text())
            .then(html => {
                gallery.insertAdjacentHTML('beforeend', html);
                pageNumber++;
            });
        }
    </script>
}
