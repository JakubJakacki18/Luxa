@using Microsoft.AspNetCore.Identity;
@using System.Security.Claims
@inject SignInManager<UserModel> signInManager
@inject Luxa.Services.NotificationService notificationService

<style>
	.btn-primary {
		border-color: #B9B4C7;
		background-color: #B9B4C7;
	}

	.btn-primary:hover {
		border-color: #5C5470;
		background-color: #5C5470;
	}

	.dropdown-menu {
		background-color: #665e78;
	}

	.dropdown-item {
		color: #FAF0E6;
	}

	.dropdown-item:active {
		background-color: #5C5470; !important
	}
</style>

@if (signInManager.IsSignedIn(User))
{
	var notificationsCount = await notificationService.GetNotificationsCountAsync(User);
	<ul class="navbar-nav flex-grow-1 mx-3">
		<li>
			<form class="d-flex" role="search" action="/Home/Discover" method="get">
				<input class="form-control me-2" type="search" name="tag" placeholder="Wyszukaj tag" aria-label="Search">
				<button class="btn btn-primary" type="submit">Szukaj</button>
			</form>
		</li>
	</ul>
	var userName = User.Identity!.Name;
	<ul class="navbar-nav">
		<li class="nav-item dropdown">
			<a class="nav-link dropdown-toggle text-white" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
				@userName
			</a>
			<ul class="dropdown-menu dropdown-menu-end" aria-labelledby="navbarDropdown">
				<li>
					<a class="dropdown-item" asp-controller="Account" asp-action="UserProfile" asp-route-userName="@userName">Profil</a>
				</li>
				<li>
					<a asp-controller="Account" asp-action="UserNotifications" class="dropdown-item">
						Powiadomienia @if (notificationsCount > 0)
						{
							<span class="badge bg-danger">@notificationsCount</span>
						}
					</a>
				</li>
				<li>
					<a class="dropdown-item" asp-controller="Settings" asp-action="Options">Ustawienia konta</a>
				</li>
				<li>
					<a class="dropdown-item" asp-controller="Account" asp-action="Logout">Wyloguj się</a>
				</li>
				@{
					var userModel = await signInManager.UserManager.GetUserAsync(User);
					if (userModel != null)
					{
						var isInRoleAdmin = await signInManager.UserManager.IsInRoleAsync(userModel, Luxa.Data.UserRoles.Admin);
						var isInRoleModerator = await signInManager.UserManager.IsInRoleAsync(userModel, Luxa.Data.UserRoles.Moderator);
						if (isInRoleAdmin || isInRoleModerator)
						{
							<partial name="_AdminLoginPartial.cshtml" />
						}
					}
				}
			</ul>
		</li>
	</ul>
}
else
{
	<ul class="navbar-nav">
		<li class="nav-item">
			<a class="nav-link text-dark" asp-controller="Account" asp-action="SignUp">Zarejestruj się</a>
		</li>
		<li class="nav-item">
			<a class="nav-link text-dark" asp-controller="Account" asp-action="SignIn">Zaloguj się</a>
		</li>
	</ul>
}
